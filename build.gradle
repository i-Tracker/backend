import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.23'
	id 'org.jetbrains.kotlin.kapt' version '1.9.23'
}

group = 'backend'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	// selenium
	implementation 'org.seleniumhq.selenium:selenium-java:4.21.0'

	// logging
	implementation 'io.github.oshai:kotlin-logging-jvm:5.1.1'

	// docker
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	kapt "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	kapt "jakarta.annotation:jakarta.annotation-api"
	kapt "jakarta.persistence:jakarta.persistence-api"

    // Http Interface
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	// @ConfigurationProperties
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// solapi
	implementation 'net.nurigo:sdk:4.2.7'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// RestAssured
	testImplementation 'io.rest-assured:rest-assured'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kapt {
	arguments {
		arg("querydsl.jpa", true)
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
	from './secrets'
	include 'application*.yml'
	into 'src/main/resources'
}

// @ConfigurationProperties
tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}
